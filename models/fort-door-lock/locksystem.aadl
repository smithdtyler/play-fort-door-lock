package locksystem
public
	with partslibrary;
	with locksystem_defs;
	with Base_Types;

	system lock_assembly
	end lock_assembly;

	system implementation lock_assembly.electric_keypad
		subcomponents
			i2c_bus: bus partslibrary::lock_bus.sparkfun_qwiic;
			board: system partslibrary::board.MetroMini328V2;
			keypad: system partslibrary::keypad.NeoKey_1x4;
			release_button: system partslibrary::release_button.Generic_Button;
			Lock_Actuator: system partslibrary::lock_actuator.magnetic_actuator;
			Power_Supply_5v: system partslibrary::power_supply.generic_power_supply;
			-- todo need to do bus access properly.
			power_bus_5v_dc: bus partslibrary::power_5v;
			power_bus_120v_ac: bus partslibrary::power_120vac.house_wall_power;
			wall_power: system partslibrary::power_supply.generic_power_supply;
		connections
			lock_assembly_electric_keypad_new_connection: port release_button.release_button_out -> board.release_button_in;
			lock_assembly_electric_keypad_new_connection2: port keypad.keys_out -> board.keypad_in;
			lock_assembly_electric_keypad_new_connection3: port board.lock_actuator_out -> Lock_Actuator.actuator_in;
	--
	-- 
	-- TODO AGREE State Machine here
	-- 
	-- 
	end lock_assembly.electric_keypad;

	system door
		features
			door_closed: in data port Base_Types::Boolean;
	end door;

	system implementation door.hinged
		annex agree {**
			const DOOR_CLOSED_STATE : int = 0;
			const DOOR_OPEN_STATE : int = 1;
			eq shut: bool = locksystem_defs::rising_edge(door_closed);
		**};
	end door.hinged;

	system fort
		-- TODO how do I write an assertion here that describes behavior of subcomponents? 
		-- do I need to define variables here, then assign them in implementations? 
--		annex agree {**
--			assume has_power "unit has power" : lock.power; -- lock is not visible in this scope
--			guarantee lock_actuates "lock when actuated" : prev(actuator_in, false) => physical_actuation;
-- 			guarantee lock opens when power is removed -- todo formalize
--		**};
	end fort;

	system implementation fort.backyard
		subcomponents
			door: system door.hinged;
			lock_assembly: system lock_assembly;
	end fort.backyard;
	
	-- 
	
	system implementation fort.lock_demonstrator1
		subcomponents
			lock : device partslibrary::Electromagnet.FiveVoltElectromagnet;
	end fort.lock_demonstrator1;
	
	system implementation fort.lock_demonstrator2
		subcomponents
			lock : device partslibrary::SolenoidLock.AdafruitTwelveVoltSolenoid;
	end fort.lock_demonstrator2;

end locksystem;